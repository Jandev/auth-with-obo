#@IntegratingService_HostAddress = https://localhost:7288
@IntegratingService_HostAddress = https://integratingserviceapp.azurewebsites.net

### Login first
# Please run the `az account get-access-token --resource=api://afad1932-49c8-4e3c-a3a1-cf9543c84d9e --query accessToken --output tsv` first to get an access token.
# This access token can then be placed in the `IntegratingService_Token` variable.
# Have not found a way to do a proper login flow with HTTP files yet.
@IntegratingService_Token = eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6Ik1jN2wzSXo5M2c3dXdnTmVFbW13X1dZR1BrbyIsImtpZCI6Ik1jN2wzSXo5M2c3dXdnTmVFbW13X1dZR1BrbyJ9.eyJhdWQiOiJhcGk6Ly9hZmFkMTkzMi00OWM4LTRlM2MtYTNhMS1jZjk1NDNjODRkOWUiLCJpc3MiOiJodHRwczovL3N0cy53aW5kb3dzLm5ldC80YjFmYTBmMy04NjJiLTQ5NTEtYTNhOC1kZjFjNzI5MzVjNzkvIiwiaWF0IjoxNzI3NDMxNjYxLCJuYmYiOjE3Mjc0MzE2NjEsImV4cCI6MTcyNzQzNjIzNywiYWNyIjoiMSIsImFpbyI6IkFWUUFxLzhZQUFBQXBva1k1b0xTMXlySllUNXlQOEdxeFRoREdaWjMrcDhXTTl1YlNiSjFTc3UxOW9kUGhiOVVFWWt5MzJYeUpiRnhPRDlzWTU1bFplc2U3Z0hrQ09JdkdKNUxTcXB5RkxhU0c4clZKQmIrZ0dzPSIsImFtciI6WyJwd2QiLCJyc2EiLCJtZmEiXSwiYXBwaWQiOiIwNGIwNzc5NS04ZGRiLTQ2MWEtYmJlZS0wMmY5ZTFiZjdiNDYiLCJhcHBpZGFjciI6IjAiLCJkZXZpY2VpZCI6ImFkYzJmZGU1LWUyYWQtNGJiNS1hNDMyLTRiMzQyZWFlMWU1ZCIsImZhbWlseV9uYW1lIjoiZGUgVnJpZXMiLCJnaXZlbl9uYW1lIjoiSmFuIiwiaXBhZGRyIjoiODQuODQuMTcwLjEzNiIsIm5hbWUiOiJKYW4gZGUgVnJpZXMiLCJvaWQiOiJiZjZjM2MxMC01YWFkLTRjZDgtYjU0Yy1mOTA4MzkyNWU3ZTMiLCJwd2RfdXJsIjoiaHR0cHM6Ly9wb3J0YWwubWljcm9zb2Z0b25saW5lLmNvbS9DaGFuZ2VQYXNzd29yZC5hc3B4IiwicmgiOiIwLkFUQUE4NkFmU3l1R1VVbWpxTjhjY3BOY2VUSVpyYV9JU1R4T282SFBsVVBJVFo0d0FHby4iLCJzY3AiOiJDdXN0b21EZWZhdWx0Iiwic3ViIjoiZWFBaW4tTjVZMUIwaFVZSWRqMnZOQ1hSc1l4TG1yMGNhSHhOdU5SUEx4USIsInRpZCI6IjRiMWZhMGYzLTg2MmItNDk1MS1hM2E4LWRmMWM3MjkzNWM3OSIsInVuaXF1ZV9uYW1lIjoiamFuQGphbi12Lm5sIiwidXBuIjoiamFuQGphbi12Lm5sIiwidXRpIjoiZ3E0bkhrck1KRXFuRlUybjN4d0xBQSIsInZlciI6IjEuMCJ9.mO6f26_H8HKo423AgIcZSLBq818L1UBO2dmICNsORYctnGcvsPE4Gga4q-K-Wufh10S-BhKBEOAaiE-A5OvRiazVVHmLdt2fhWp3sSfSVXa39m0zcwRNfj28ajSxqEn_cyrdr1tqfuGz_ZTy0myUdcDZBv2LSoLKfqU5wEjkyOvq8CKWJHuhu10laA2eElL8DnSD8whbYjtGD0Khx3Oof04TVP3MRHiPDrbHWTnALDX4m7XbBHhgBAThkapEpZYOT5ZQxlcelDYOLpFlm-ImjwPEiDMcHqo8LN3Ots1emPBxQqq7vKXSks1Vc5NTbEUg0XYju0xo74J3ZvtTcAmSLg

### Swagger JSON
GET {{IntegratingService_HostAddress}}:443/swagger/v1/swagger.json
Accept: application/json
Accept-Language: en-US,en;q=0.5

### Swagger HTML
GET {{IntegratingService_HostAddress}}:8080/swagger/index.html
Accept: application/json
Accept-Language: en-US,en;q=0.5

### Request data
GET {{IntegratingService_HostAddress}}/AllTheData/WeatherForecast
Authorization: Bearer {{IntegratingService_Token}}
Accept: application/json
Accept-Language: en-US,en;q=0.5

###

# Make sure to create a token where the user has the `User` role
GET {{IntegratingService_HostAddress}}/AllTheData/WeatherForecastWithUserRole
Authorization: Bearer {{IntegratingService_Token}}
Accept: application/json
Accept-Language: en-US,en;q=0.5

###

# Make sure to create a token where the user has the `Admin` role
GET {{IntegratingService_HostAddress}}/AllTheData/WeatherForecastWithAdminRole
Authorization: Bearer {{IntegratingService_Token}}
Accept: application/json
Accept-Language: en-US,en;q=0.5

###

# Make sure to create a token for a user that has the `WeatherUser` scope assigned to the BackendService API
GET {{IntegratingService_HostAddress}}/AllTheData/WeatherForecastWithWeatherUserScope
Authorization: Bearer {{IntegratingService_Token}}
Accept: application/json
Accept-Language: en-US,en;q=0.5

###

# Make sure to create a token for a user that has the `WeatherAdmin` scope assigned to the BackendService API
GET {{IntegratingService_HostAddress}}/AllTheData/WeatherForecastWithWeatherAdminScope
Authorization: Bearer {{IntegratingService_Token}}
Accept: application/json
Accept-Language: en-US,en;q=0.5

###

# The UMI will create a token with the `Admin` role.
GET {{IntegratingService_HostAddress}}/AllTheData/GetWeatherForecastWithAdminRoleAccessAsUserManagedIdentity
Authorization: Bearer {{IntegratingService_Token}}
Accept: application/json
Accept-Language: en-US,en;q=0.5

# Create a token for the user who had `access_as_user` scope to the BackendService and the `Admin` role
GET {{IntegratingService_HostAddress}}/AllTheData/GetWeatherForecastWithAdminRoleAccessAsUser
Authorization: Bearer {{IntegratingService_Token}}
Accept: application/json
Accept-Language: en-US,en;q=0.5

